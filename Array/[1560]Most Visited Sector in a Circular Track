Given an integer n and an integer array rounds. We have a circular track which consists of n sectors labeled from 1 to n.
A marathon will be held on this track, the marathon consists of m rounds. 
The ith round starts at sector rounds[i - 1] and ends at sector rounds[i]. 
For example, round 1 starts at sector rounds[0] and ends at sector rounds[1]

Return an array of the most visited sectors sorted in ascending order.

Only the start and end matter.
```
class Solution:
    def mostVisited(self, n: int, rounds: List[int]) -> List[int]:
        start,end=rounds[0],rounds[-1]
        if start<end:
            return [i for i in range(start,end+1)]
        elif start == end:
            return [start]
        else:
            return [i for i in range(1,end+1)]+[i for i in range(start,n+1)]
```
